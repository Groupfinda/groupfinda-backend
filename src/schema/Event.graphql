extend type Query {
  """
  Searces and always returns an Array. Empty array should be returned when no events
  are found.

  Optional search term or event code as arguments for reusability
  """
  searchEvent(searchTerm: String, eventCode: String): [Event]!

  """
  Get a particular event through the ID. Either returns an Event or null
  """
  getEvent(eventId: ID): Event

  """
  Get a list of events for swiping
  """
  getSwipeEvents: [Event]!
  """
  Get a list of events owned by user
  """
  getUserEvents: [Event]!
}

extend type Mutation {
  """
  Creates an event with the specified argument fields.

  If recurring mode is turned on both date of event and date of last register should be invalid

  User must at least be authenticated to do so
  """
  createEvent(
    id: ID
    title: String!
    description: String!
    dateOfEvent: Date!
    recurringMode: Boolean!
    dateLastRegister: Date!
    images: [String]!
    private: Boolean!
    groupSize: Int!
    category: [String]!
    locationOn: Boolean!
    location: LocationInput!
  ): Event!
  """
  Register event for a user. Requires authentication. Will not work if user is already registered
  """
  registerEvent(eventId: String!): Event!
  """
  Unregister event for a user. Requires authentication. Will not work if user is not registered
  """
  unregisterEvent(eventId: String!): Event!
  """
  View an event. Has to be 'LIKE' or 'DISLIKE' for type argument.
  """
  viewEvent(eventId: String!, type: String!): Boolean!
  """
  Delete all events for testing purposes
  """
  deleteAllEvent: Boolean!
}

input LocationInput {
  address: String!
  postalCode: String!
}
"""
Location type for Event
"""
type Location {
  address: String!
  postalCode: String!
}

"""
Default Event type with custom resolvers
"""
type Event {
  id: ID!
  title: String!
  description: String!
  owner: User!
  recurringMode: Boolean!
  dateOfEvent: Date!
  dateLastRegister: Date!
  images: [String]!
  private: Boolean!
  groupSize: Int!
  category: [String]!
  registeredUsers: [User]!
  groups: [String]!
  locationOn: Boolean!
  eventCode: String!
  location: Location!
}
